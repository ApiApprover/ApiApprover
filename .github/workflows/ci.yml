on:
  push:
    branches:
    - master
    - release-*
    tags:
    - '**'
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, windows-latest]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            3.1.x
            6.0.x
            7.0.x
      - name: Install dependencies
        working-directory: src
        run: dotnet restore
      - name: Build solution [Release]
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        working-directory: src
        run: dotnet build --no-restore -c Release
      - name: Build solution [Debug]
        working-directory: src
        run: dotnet build --no-restore -c Debug
      - name: Test solution [Debug]
        working-directory: src
        run: dotnet test --no-restore --no-build
      - name: Pack Lib [Release]
        working-directory: src
        run: dotnet pack PublicApiGenerator/PublicApiGenerator.csproj --no-restore --no-build -c Release -o out
      - name: Publish Tool [Release]
        working-directory: src
        run: dotnet publish PublicApiGenerator.Tool/PublicApiGenerator.Tool.csproj --no-restore --no-build -c Release -o out
      - name: Upload Nuget packages as workflow artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Nuget packages
          path: |
            src/out/*
      - name: Publish Nuget packages to Nuget registry
        working-directory: src
        run: dotnet nuget push "out/*" -k ${{secrets.NUGET_AUTH_TOKEN}}
