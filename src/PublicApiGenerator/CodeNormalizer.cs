using System;
using System.IO;
using System.Text.RegularExpressions;

namespace PublicApiGenerator
{
    internal static class CodeNormalizer
    {
        const string AutoGeneratedHeader = @"^//-+\s*$.*^//-+\s*$";
        const string EmptyGetSet = @"\s+{\s+get\s+{\s+}\s+set\s+{\s+}\s+}";
        const string EmptyGet = @"\s+{\s+get\s+{\s+}\s+}";
        const string EmptySet = @"\s+{\s+set\s+{\s+}\s+}";
        const string GetSet = @"\s+{\s+get;\s+set;\s+}";
        const string Get = @"\s+{\s+get;\s+}";
        const string Set = @"\s+{\s+set;\s+}";

        // https://github.com/ApiApprover/ApiApprover/issues/80
        internal const string StaticMarker = "static_C91E2709_C00B-4CAB_8BBC_B2B11DC75E50 ";
        internal const string ReadonlyMarker = "readonly_79D3ED2A_0B60_4C3B_8432_941FE471A38B ";

        public static string NormalizeGeneratedCode(StringWriter writer)
        {
            var gennedClass = writer.ToString();

            gennedClass = Regex.Replace(gennedClass, AutoGeneratedHeader, string.Empty,
                RegexOptions.IgnorePatternWhitespace | RegexOptions.Multiline | RegexOptions.Singleline);
            gennedClass = Regex.Replace(gennedClass, EmptyGetSet, " { get; set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, GetSet, " { get; set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, EmptyGet, " { get; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, EmptySet, " { set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, Get, " { get; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, Set, " { set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, @"\s+{\s+}", " { }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, @"\)\s+;", ");", RegexOptions.IgnorePatternWhitespace);

            gennedClass = gennedClass.Replace("class " + StaticMarker, "static class ");
            gennedClass = gennedClass.Replace("struct " + ReadonlyMarker, "readonly struct ");
            gennedClass = Regex.Replace(gennedClass, @"\r\n|\n\r|\r|\n", Environment.NewLine);

            return gennedClass;
        }
    }
}
