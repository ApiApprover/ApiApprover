using System;
using System.IO;
using System.Text.RegularExpressions;

namespace PublicApiGenerator
{
    class CodeNormalizer
    {
        const string autoGeneratedHeader = @"^//-+\s*$.*^//-+\s*$";
        const string emptyGetSet = @"\s+{\s+get\s+{\s+}\s+set\s+{\s+}\s+}";
        const string emptyGet = @"\s+{\s+get\s+{\s+}\s+}";
        const string emptySet = @"\s+{\s+set\s+{\s+}\s+}";
        const string getSet = @"\s+{\s+get;\s+set;\s+}";
        const string get = @"\s+{\s+get;\s+}";
        const string set = @"\s+{\s+set;\s+}";

        // https://github.com/ApiApprover/ApiApprover/issues/80
        internal const string staticMarker = "static_C91E2709-C00B-4CAB-8BBC-B2B11DC75E50 ";
        internal const string readonlyMarker = "readonly_79D3ED2A-0B60-4C3B-8432-941FE471A38B ";

        internal static string NormalizeGeneratedCode(StringWriter writer)
        {
            var gennedClass = writer.ToString();
            
            gennedClass = Regex.Replace(gennedClass, autoGeneratedHeader, string.Empty,
                RegexOptions.IgnorePatternWhitespace | RegexOptions.Multiline | RegexOptions.Singleline);
            gennedClass = Regex.Replace(gennedClass, emptyGetSet, " { get; set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, getSet, " { get; set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, emptyGet, " { get; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, emptySet, " { set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, get, " { get; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, set, " { set; }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, @"\s+{\s+}", " { }", RegexOptions.IgnorePatternWhitespace);
            gennedClass = Regex.Replace(gennedClass, @"\)\s+;", ");", RegexOptions.IgnorePatternWhitespace);

            gennedClass = gennedClass.Replace("class " + staticMarker, "static class ");
            gennedClass = gennedClass.Replace("struct " + readonlyMarker, "readonly struct ");
            gennedClass = Regex.Replace(gennedClass, @"\r\n|\n\r|\r|\n", Environment.NewLine);

            return gennedClass;
        }
    }
}
